#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) xbacklight -inc 10 ;;
	5) xbacklight -dec 10 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
        [ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	#case "$(cat "$battery/status")" in
		#"Full") status="⚡" ;;
		#"Discharging") status="🔋" ;;
		#"Charging") status="🔌" ;;
		#"Not charging") status="🛑" ;;
		#"Unknown") status="♻️" ;;
	#esac
	capacity=$(cat "$battery/capacity")
        if [ "$(cat "$battery/status")" == "Charging" ]; then
            if [ "$capacity" -ge 90 ]; then
                status=""
            elif [ "$capacity" -ge 80 ]; then
                status=""
            elif [ "$capacity" -ge 70 ]; then
                status=""
            elif [ "$capacity" -ge 60 ]; then
                status=""
            elif [ "$capacity" -ge 50 ]; then
                status=""
            elif [ "$capacity" -ge 40 ]; then
                status=""
            elif [ "$capacity" -ge 30 ]; then
                status="";
            elif [ "$capacity" -ge 20 ]; then
                status=""
            elif [ "$capacity" -ge 0 ]; then 
                status=""
            fi
        else

            if [ "$capacity" -ge 90 ]; then
                status=""
            elif [ "$capacity" -ge 80 ]; then
                status=""
            elif [ "$capacity" -ge 70 ]; then
                status=""
            elif [ "$capacity" -ge 60 ]; then
                status=""
            elif [ "$capacity" -ge 50 ]; then
                status=""
            elif [ "$capacity" -ge 40 ]; then
                status=""
            elif [ "$capacity" -ge 30 ]; then
                status="";
            elif [ "$capacity" -ge 20 ]; then
                status=""
            elif [ "$capacity" -ge 0 ]; then 
                status=""
            fi
        fi

	# Will make a warn variable if discharging and low
	[ "$capacity" -le 25 ] && warn="❗"
	# Prints the info
	printf "%s%s%d%%" "$status " "$warn" "$capacity"; unset warn
done && exit 0
